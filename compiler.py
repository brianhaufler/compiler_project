import sysimport lexerimport parserimport symbol_tableimport semantic_actionsif __name__ == "__main__":    # Read in file name from command line (default of "phase3-1.txt")    if (len(sys.argv) != 2):        file = "phase3-1.txt"    else:        file = sys.argv[1]    # Read in file contents    with open(file) as f:        program_contents = f.read()    f.close()    # Initialization of semantic actions class    semantic_actions_class = semantic_actions.SemanticAction()    # Prepare reserved entries    main_entry = symbol_table.ProcedureEntry('MAIN', 0, [], True)    read_entry = symbol_table.ProcedureEntry('READ', 0, [], True)    write_entry = symbol_table.ProcedureEntry('WRITE', 0, [], True)    input_entry = symbol_table.VariableEntry('INPUT', None, None, True)    output_entry = symbol_table.VariableEntry('OUTPUT', None, None, True)    # Insert entries in global table (located in semantic_actions)    semantic_actions_class.global_table.insert('MAIN', main_entry)    semantic_actions_class.global_table.insert('READ', read_entry)    semantic_actions_class.global_table.insert('WRITE', write_entry)    semantic_actions_class.global_table.insert('INPUT', input_entry)    semantic_actions_class.global_table.insert('OUTPUT', output_entry)    # Run lexer    token_array = lexer.lexer(program_contents)    # for token in token_array:    #     print(token)    # Run parser    parser.parser(token_array, semantic_actions_class)